version: "3.6"

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  
  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    restart: always
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web
      - ../LocalDropbox:/LocalDropbox
      - ../LocalDrive:/LocalDrive
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DEBUG=1
      - ALLOWED_HOST=${ALLOWED_HOST}
    depends_on:
      - db
  
  celery:
    restart: always
    build:
      context: .
    command: celery -A app worker -l DEBUG --beat
    volumes:
      - ./app:/app
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    depends_on:
      - db
      - redis
      - app

  frontend:
    build:
      context: frontend
    command: sh -c "yarn install && yarn dev"
    # command: sh -c "yarn install && yarn build && yarn start"
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    environment:
      - API_URL=${API_URL}


  nginx:
    depends_on:
      - app
      - frontend
    image: nginx:alpine
    ports:
      - 8880:80
      - 8443:443
    restart: unless-stopped
    volumes:
      - ./proxy/dev.conf:/etc/nginx/conf.d/default.conf

volumes:
  dev-db-data:
  dev-static-data:
